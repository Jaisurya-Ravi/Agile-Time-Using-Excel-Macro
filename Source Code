    Sub GetDropdownValuesAndWriteToExcel()
        Dim driver As Selenium.WebDriver
        Set driver = New Selenium.WebDriver
        
        ' Start Chrome and navigate to the web page
        driver.Start "chrome"
        driver.Window.Maximize
        driver.Get "http://52.172.91.153/agiletime_v2_11.2/aspx/signin.aspx"
        
        
'        ' Send Alt + Spacebar, then N (combination to minimize window in Windows)
'        SendKeys "% ", True
'        driver.wait 200
'        SendKeys "N", True
'
'        ' Wait for a few seconds to let the window minimize
'        Application.wait Now + TimeValue("00:00:02")
    
        
        ' Set the worksheet where the data is located
        Dim ws1 As Worksheet
        Dim cellValue As Variant
        Set ws1 = ThisWorkbook.Sheets("User Details")

        ' Handling Username
        ' Read data from cell A1 (change the cell reference as needed)
        cellValueuser = ws1.Cells(3, 2).Value ' Row 1, Column 1 (A1)
        ' Enter username and click Next
        driver.FindElementByXPath("//input[@id='axUserName']").SendKeys cellValueuser
        driver.FindElementByXPath("//input[@name='btnNext']").Click
        ' Check if the username is empty and capture the error message
        Dim errorMessageuser As String
        On Error Resume Next
        errorMessageuser = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessageuser <> "" Then
            ws1.Cells(3, 2 + 1).Value = errorMessageuser
            driver.Quit
            Application.StatusBar = "Error : " & errorMessageuser & vbCrLf & vbCrLf & "Try: Enter you Username in User Details sheet on the cell B3"
            MsgBox "Error : " & errorMessageuser & vbCrLf & vbCrLf & "Try: Enter you Username in User Details sheet on the cell B3"
            Else
            ws1.Cells(3, 2 + 1).ClearContents
        
        
        ' Handling Password
        ' Read data from the specified cell
        cellValue = ws1.Cells(4, 2).Value
        ' Enter password and click Submit
        driver.FindElementByXPath("//input[@id='axPassword']").SendKeys cellValue
        driver.FindElementByXPath("//input[@id='btnSubmitNew']").Click
        ' Check if the username is empty and capture the error message
        Dim errorMessagepass As String
        On Error Resume Next
        errorMessagepass = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessagepass <> "" Then
            ws1.Cells(4, 2 + 1).Value = errorMessagepass
            driver.Quit
            Application.StatusBar = "Error : " & errorMessagepass & vbCrLf & vbCrLf & "Try: Enter you Password in User Details sheet on the cell B4"
            MsgBox "Error : " & errorMessagepass & vbCrLf & vbCrLf & "Try: Enter you Password in User Details sheet on the cell B4"
        Else
            ws1.Cells(4, 2 + 1).ClearContents
        ' Check if the password is incorrect and capture the error message
        Dim errorMessage As String
        On Error Resume Next
        errorMessage = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessage <> "" Then
            ws1.Cells(4, 2 + 1).Value = errorMessage
            driver.Quit
            MsgBox "Error : " & errorMessage & "Try: Enter your valid Username and Password for your Agile Time"
        Else
            ws1.Cells(4, 2 + 1).ClearContents
            explicitwait driver, "//div[@class='loader-box-wrapper d-flex bg-white p-20 shadow rounded']"
    
    
    
        ' Click on menu items and switch to frame
        WaitForElementAndClick driver, "//span[text()='Time Sheet']", 5000
        driver.wait 2000
        WaitForElementAndClick driver, "//span[text()='Time Sheet Entry']", 5000
        driver.SwitchToFrame "middle1"
        explicitwait driver, "//div[@class='loader-box-wrapper d-flex bg-white p-20 shadow rounded']"
        Application.StatusBar = "Time Sheet Form Loaded"
        
        ' Get the specified Excel worksheet by name
        Dim xlWS As Worksheet
        Set xlWS = ThisWorkbook.Sheets("Master Details")
        
        
        ' Clearing Existing Master Data from Sheet
        Dim columnsToClear As Variant
        columnsToClear = Array(2, 3, 4, 5, 6)  ' Assuming Columns B, C, and D (change as needed)
        Dim rowIndex As Integer
        Dim colIndex As Variant
        ' Loop through each column in the array
        For Each colIndex In columnsToClear
            ' Clear all data in the current column starting from the second row
            For rowIndex = 2 To xlWS.Cells(xlWS.rows.count, colIndex).End(xlUp).row
                xlWS.Cells(rowIndex, colIndex).ClearContents
            Next rowIndex
        Next colIndex
        
        
        ' Dropdown 1
        ' Find the dropdown element by its XPath (replace with your actual XPath)
        driver.FindElementByXPath("//span[@aria-controls='select2-dwtask000F1-container']").Click
        driver.wait 500
        driver.FindElementByXPath("//a[@data-refresh='dwtask000F1']").Click
        driver.wait 3000
        Dim options1 As Object
        Set options1 = driver.FindElementsByXPath("//ul/li[@role='option']")
        ' Write the dropdown values to Excel starting from the specified row and column
        Dim rowIndex1 As Integer
        rowIndex1 = 2
        Dim colIndex1 As Integer
        colIndex1 = 2
        Dim optionIndex1 As Integer
        For optionIndex1 = 1 To options1.count
            ' Write each option's text to Excel at the specified row and column
            xlWS.Cells(rowIndex1, colIndex1).Value = options1.Item(optionIndex1).Text
            rowIndex1 = rowIndex1 + 1 ' Move to the next row
        Next optionIndex1

        
'        ' driver.FindElementByXPath("(//button[@class='select2-selection__clear'])[1]").Click
'        'driver.wait 7000
'        driver.FindElementByXPath("//span[@aria-controls='select2-dwtask000F1-container']").Click
'        driver.FindElementByXPath("//a[@data-refresh='dwtask000F1']").Click
'        driver.wait 3000
'        driver.FindElementByXPath("(//ul/li[@role='option'])[2]").Click
'        driver.wait 500
'        driver.FindElementByXPath("//span[@aria-controls='select2-dwtask000F1-container']").Click
'        driver.FindElementByXPath("//a[@data-refresh='dwtask000F1']").Click
'        driver.wait 3000
'        driver.FindElementByXPath("//ul/li[text()='Adhoc']").Click
'        Dim Adhoc As String
'        Adhoc = driver.FindElementByXPath("//span[@id='select2-dwtask000F1-container']").Text
'        xlWS.Cells(2, 2).Value = Adhoc
        
        
        ' Dropdown 2
        ' Find the dropdown element by its XPath (replace with your actual XPath)
        driver.FindElementByXPath("//span[@aria-labelledby='select2-activitytype000F1-container']").Click
        driver.wait 500
        driver.FindElementByXPath("//a[@data-refresh='activitytype000F1']").Click
        driver.wait 3000
        Dim options2 As Object
        Set options2 = driver.FindElementsByXPath("//ul/li[@role='option']")
        ' Write the dropdown values to Excel starting from the specified row and column
        Dim rowIndex2 As Integer
        rowIndex2 = 2
        Dim colIndex2 As Integer
        colIndex2 = 3
        Dim optionIndex2 As Integer
        For optionIndex2 = 1 To options2.count
            ' Write each option's text to Excel at the specified row and column
            xlWS.Cells(rowIndex2, colIndex2).Value = options2.Item(optionIndex2).Text
            rowIndex2 = rowIndex2 + 1 ' Move to the next row
        Next optionIndex2
        
        
        ' Dropdown 3
        ' Find the dropdown element by its XPath (replace with your actual XPath)
        driver.FindElementByXPath("//span[@aria-labelledby='select2-dwproject000F1-container']").Click
        driver.wait 500
        driver.FindElementByXPath("//a[@data-refresh='dwproject000F1']").Click
        driver.wait 3000
        Dim options3 As Object
        Set options3 = driver.FindElementsByXPath("//ul/li[@role='option']")
        ' Write the dropdown values to Excel starting from the specified row and column
        Dim rowIndex3 As Integer
        rowIndex3 = 2
        Dim colIndex3 As Integer
        colIndex3 = 4
        Dim optionIndex3 As Integer
        For optionIndex3 = 1 To options3.count
            ' Write each option's text to Excel at the specified row and column
            xlWS.Cells(rowIndex3, colIndex3).Value = options3.Item(optionIndex3).Text
            rowIndex3 = rowIndex3 + 1 ' Move to the next row
        Next optionIndex3
        driver.FindElementByXPath("//input[@id='dwhoursspent000F1']").Click
        driver.wait 500
        
        
        ' Dropdown 4
        ' Find the dropdown element by its XPath (replace with your actual XPath)
        driver.FindElementByXPath("//span[@aria-labelledby='select2-partner000F1-container']").Click
        driver.wait 500
        driver.FindElementByXPath("//a[@data-refresh='partner000F1']").Click
        driver.wait 5000
        Dim options4 As Object
        Set options4 = driver.FindElementsByXPath("//ul/li[@role='option']")
        ' Write the dropdown values to Excel starting from the specified row and column
        Dim rowIndex4 As Integer
        rowIndex4 = 2
        Dim colIndex4 As Integer
        colIndex4 = 5
        Dim optionIndex4 As Integer
        For optionIndex4 = 1 To options4.count
            ' Write each option's text to Excel at the specified row and column
            xlWS.Cells(rowIndex4, colIndex4).Value = options4.Item(optionIndex4).Text
            rowIndex4 = rowIndex4 + 1 ' Move to the next row
        Next optionIndex4
        
        ' Dropdown 5
        ' Find the dropdown element by its XPath (replace with your actual XPath)
        driver.FindElementByXPath("//span[@aria-labelledby='select2-customer000F1-container']").Click
        driver.wait 500
        driver.FindElementByXPath("//a[@data-refresh='customer000F1']").Click
        driver.wait 5000
        Dim options5 As Object
        Set options5 = driver.FindElementsByXPath("//ul/li[@role='option']")
        ' Write the dropdown values to Excel starting from the specified row and column
        Dim rowIndex5 As Integer
        rowIndex5 = 2
        Dim colIndex5 As Integer
        colIndex5 = 6
        Dim optionIndex5 As Integer
        For optionIndex5 = 1 To options5.count
            ' Write each option's text to Excel at the specified row and column
            xlWS.Cells(rowIndex5, colIndex5).Value = options5.Item(optionIndex5).Text
            rowIndex5 = rowIndex5 + 1 ' Move to the next row
        Next optionIndex5
        driver.Quit
        Application.StatusBar = "Master Record Details are Updated Successfully!!"
        MsgBox "Master Record Details are Updated Successfully!!"
            
        End If
        End If
        End If
        driver.Quit
    End Sub
    Sub explicitwait(driver As Object, locator As String)
        Dim i As Integer
        On Error GoTo Retry
        driver.FindElementByXPath (locator)
        Exit Sub
Retry:
        driver.wait 500
        i = i + 1
        If i = 20 Then
            On Error GoTo 0
            Exit Sub
        Else
            Resume
        End If
    End Sub
    
    Function WaitForElementAndClick(driver As Object, locator As String, timeout As Integer) As Boolean
        Dim startTime As Double
        startTime = Timer
        
        Do While Timer - startTime < timeout
            On Error Resume Next
            Dim element As Object
            Set element = driver.FindElementByXPath(locator)
            On Error GoTo 0
            
            If Not element Is Nothing Then
                element.Click
                WaitForElementAndClick = True
                Exit Function
            End If
            
            Application.wait Now + TimeValue("0:00:1") ' Wait for 1 second
        Loop
        
        WaitForElementAndClick = False
    End Function

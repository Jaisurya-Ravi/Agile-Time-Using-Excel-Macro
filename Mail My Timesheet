Option Explicit

Private WithEvents oSmtp As EASendMailObjLib.Mail
Private CurrentEmailIsFinished As Boolean
Private HasErrorWithEmail As Boolean
Private ErrorDescription As String

Private Sub InitVariables()
    ' Initialize variables for email sending status and errors
    CurrentEmailIsFinished = True
    HasErrorWithEmail = False
    ErrorDescription = ""
End Sub

' Event handlers for email sending events
Private Sub oSmtp_OnAuthenticated()
    Application.StatusBar = "Authenticated"
End Sub

Private Sub oSmtp_OnClosed()
    CurrentEmailIsFinished = True
End Sub

Private Sub oSmtp_OnConnected()
    Application.StatusBar = "Connected"
End Sub

Private Sub oSmtp_OnError(ByVal lError As Long, ByVal ErrDescription As String)
    HasErrorWithEmail = True
    CurrentEmailIsFinished = True
    ErrorDescription = ErrDescription
End Sub

Private Sub oSmtp_OnSending(ByVal lSent As Long, ByVal lTotal As Long)
    Application.StatusBar = "Sending " & lSent & "/" & lTotal & " ..."
End Sub

Public Sub SendMailFromWorkBook()
    ' Initialize Excel worksheet objects
    Dim oSheet1 As Worksheet
    Set oSheet1 = ThisWorkbook.Sheets("Time Sheet Details") ' Change the sheet name as needed
    
    ' Get the last row and column with data in Time Sheet Details sheet
    Dim lastRow As Long
    Dim lastCol As Long
    lastRow = oSheet1.Cells(oSheet1.rows.count, 1).End(xlUp).row
    lastCol = oSheet1.Cells(1, oSheet1.Columns.count).End(xlToLeft).Column
    
    ' Create the HTML table
    Dim htmlTable As String
    htmlTable = "<style>" & _
            "table {" & _
            "  font-family: Calibri, Calibri;" & _
            "  border-collapse: collapse;" & _
            "  width: 100%;" & _
            "}" & _
            "td, th {" & _
            "  border: 1px solid #dddddd;" & _
            "  text-align: center;" & _
            "  padding: 2px;" & _
            "}" & _
            "tr:nth-child(even) {" & _
            "  background-color: #f2f2f2;" & _
            "}" & _
            "th {" & _
            "  background-color: #4CAF50;" & _
            "  color: white;" & _
            "  font-weight: bold;" & _
            "}" & _
            "</style>"
    htmlTable = htmlTable & "<table>"
    
    ' Populate the HTML table with data from Time Sheet Details sheet
    Dim row As Long, col As Long
    For row = 1 To lastRow
        htmlTable = htmlTable & "<tr>"
        For col = 1 To lastCol
            htmlTable = htmlTable & "<td>" & oSheet1.Cells(row, col).Value & "</td>"
        Next col
        htmlTable = htmlTable & "</tr>"
    Next row
    htmlTable = htmlTable & "</table>"
    
    ' Initialize Excel worksheet object for User Details
    Dim oSheet
    Set oSheet = ThisWorkbook.Sheets("User Details")

    ' Initialize Excel worksheet object for configuration settings
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Configuration")

    ' Initialize variables for email details
    Dim sender, name, address, subject, bodyTemplate, body, bodyFormat, ServerAddr, ServerPort, userName, password, ccaddress
    bodyFormat = 0 'Text body format
    
    ' Please change sender address to yours
    sender = ws.Range("B5").Value
    subject = ws.Range("B7").Value
    Dim bodyText As String
    bodyText = ws.Range("B8").Value
    
    ' Construct email body using a body template
    bodyTemplate = "Dear {name},<br><br>" & _
    bodyText & "<br><br>" & _
    "{table} <br><br>" & _
    "Best Regards,<br>" & _
    "Team Automation.<br><br>" & _
    "This email is automatically generated. Please do not reply to this message. *** Triggered on : " & Format(Now, "dd-mmm-yyyy hh:mm:ss")


    ' Sending Email
    Dim emailSent
    emailSent = 0
        
    ' Read email configuration settings from Configuration sheet
    name = oSheet.Range("B3").Value
    address = oSheet.Range("B5").Value
    ServerAddr = ws.Range("B3").Value
    ServerPort = ws.Range("B4").Value
    userName = ws.Range("B5").Value
    password = ws.Range("B6").Value
    ccaddress = oSheet.Range("B6").Value
    
    ' Construct email body using the body template and HTML table
    body = Replace(bodyTemplate, "{name}", name)
    body = Replace(body, "{table}", htmlTable)
    
        ' Validate email configuration settings
        If Len(name) = 0 Then
        MsgBox "Username is empty. Please enter your Username."
        Exit Sub
        End If
    
        If Len(address) = 0 Then
        MsgBox "Email ID is empty. Please enter a valid Email ID."
        Exit Sub
        End If
        
        If Len(ServerAddr) = 0 Then
        MsgBox "Host Name or Server Address is empty. Please enter a valid Host Name or Server Address."
        Exit Sub
        End If
        
        If Len(ServerPort) = 0 Then
        MsgBox "Port is empty. Please enter a valid Port Number."
        Exit Sub
        End If
    
        If Len(userName) = 0 Then
        MsgBox "Username is empty. Please enter a valid Outlook Email ID."
        Exit Sub
        End If
        
        If Len(password) = 0 Then
        MsgBox "Password is empty. Please enter a valid Outlook Email ID Password."
        Exit Sub
        End If
        
        If Len(ccaddress) = 0 Then
        MsgBox "Manager Email ID is empty. Please enter a valid Email ID."
        Exit Sub
        End If
       
       ' Send email using SendMailTo function
        If Not SendMailTo(sender, name, address, subject, body, bodyFormat, ServerAddr, ServerPort, userName, password, ccaddress) Then
            Exit Sub
        End If


        emailSent = emailSent + 1
    'Next i

    Application.StatusBar = "Total " & emailSent & " email sent to " & address
    MsgBox "Total " & emailSent & " email sent to " & address

End Sub

Function SendMailTo(sender, name, address, subject, body, bodyFormat, ServerAddr, ServerPort, userName, password, ccaddress)
    ' Initialize EASendMail object
    Set oSmtp = New EASendMailObjLib.Mail
    oSmtp.LicenseCode = "TryIt"

    ' Configure SMTP settings
    oSmtp.ServerAddr = ServerAddr
    oSmtp.userName = userName
    oSmtp.password = password

    ' Set server port, if 25 port doesn't work, try to use 587 port
    oSmtp.ServerPort = ServerPort

    ' Using TryTLS,
    ' If smtp server supports TLS, then TLS connection is used; otherwise, normal TCP connection is used.
    ' https://www.emailarchitect.net/easendmail/sdk/?ct=connecttype
    oSmtp.ConnectType = 4

    ' If your server is Exchange 2007 or later version, you can use EWS protocol.
    ' https://www.emailarchitect.net/easendmail/sdk/?ct=protocol
    ' Set Exchange Web Service Protocol - EWS - Exchange 2007/2010/2013/2016
    ' oSmtp.Protocol = 1

    ' Set email details
    oSmtp.FromAddr = sender
    oSmtp.AddRecipient name, address, 0
    oSmtp.AddRecipientEx "CC recipient<" & ccaddress & ">", 0
    oSmtp.subject = subject
    oSmtp.bodyFormat = 1
    oSmtp.bodyText = body
    
    ' Add primary recipient
    If address <> ccaddress Then
        oSmtp.AddRecipient name, address, 0 ' Add recipient with name and email address
    Else
        MsgBox "Email address and Manager Email address are the same. Please provide different addresses."
        SendMailTo = False ' Return False indicating email sending failed
        Exit Function
    End If

    ' You can add attachment like this:
    ' Add attachment from local disk
    ' If oSmtp.AddAttachment("d:\test.jpg") <> 0 Then
        ' Application.StatusBar = "Failed to add attachment with error:" & oSmtp.GetLastErrDescription()
        ' SendMailTo = False
        ' Exit Function
    'End If

    Application.DisplayStatusBar = True
    Application.StatusBar = "Connecting " & oSmtp.ServerAddr & " ..."

    ' Set asynchronous sending
    oSmtp.Asynchronous = 1
    InitVariables
    CurrentEmailIsFinished = False
    oSmtp.SendMail
    
    ' Wait for the email sending, you can do other thing here
    Do While Not CurrentEmailIsFinished
        DoEvents
    Loop
    
    ' Check if there was an error while sending the email
    If HasErrorWithEmail Then
        Application.StatusBar = "Failed to send email to " & address & "; " & ErrorDescription
        SendMailTo = False
    Else
        Application.StatusBar = "Message to " & address & " has been submitted to server."
        SendMailTo = True
    End If

    Set oSmtp = Nothing
End Function







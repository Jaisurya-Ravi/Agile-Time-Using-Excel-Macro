Sub BasicSeleniumVBAIntegration()
        Dim driver As Selenium.WebDriver
        Set driver = New Selenium.WebDriver
        
        
        ' Start Chrome and navigate to the web page
        driver.Start "chrome"
        driver.Window.Maximize
        
        driver.Get "http://52.172.91.153/agiletime_v2_11.2/aspx/signin.aspx"


        ' Set the worksheet where the data is located
        Dim ws1 As Worksheet
        Dim cellValue As Variant
        Set ws1 = ThisWorkbook.Sheets("User Details")
        
        
        ' Handling Username
        ' Read data from cell A1 (change the cell reference as needed)
        cellValueuser = ws1.Cells(3, 2).Value ' Row 1, Column 1 (A1)
        ' Enter username and click Next
        driver.FindElementByXPath("//input[@id='axUserName']").SendKeys cellValueuser
        driver.FindElementByXPath("//input[@name='btnNext']").Click
        ' Check if the username is empty and capture the error message
        Dim errorMessageuser As String
        On Error Resume Next
        errorMessageuser = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessageuser <> "" Then
            ws1.Cells(3, 2 + 1).Value = errorMessageuser
            driver.Quit
            Application.StatusBar = "Error : " & errorMessageuser & vbCrLf & vbCrLf & "Try: Enter you Username in User Details sheet on the cell B3"
            MsgBox "Error : " & errorMessageuser & vbCrLf & vbCrLf & "Try: Enter you Username in User Details sheet on the cell B3"
        Else
            ws1.Cells(3, 2 + 1).ClearContents
        
        
        
        ' Handling Password
        ' Read data from the specified cell
        cellValue = ws1.Cells(4, 2).Value
        ' Enter password and click Submit
        driver.FindElementByXPath("//input[@id='axPassword']").SendKeys cellValue
        driver.FindElementByXPath("//input[@id='btnSubmitNew']").Click
        ' Check if the username is empty and capture the error message
        Dim errorMessagepass As String
        On Error Resume Next
        errorMessagepass = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessagepass <> "" Then
            ws1.Cells(4, 2 + 1).Value = errorMessagepass
            driver.Quit
            Application.StatusBar = "Error : " & errorMessagepass & vbCrLf & vbCrLf & "Try: Enter you Password in User Details sheet on the cell B4"
            MsgBox "Error : " & errorMessagepass & vbCrLf & vbCrLf & "Try: Enter you Password in User Details sheet on the cell B4"
        Else
            ws1.Cells(4, 2 + 1).ClearContents
        ' Check if the password is incorrect and capture the error message
        Dim errorMessage As String
        On Error Resume Next
        errorMessage = driver.FindElementByXPath("//div[@class='toast-message']").Text
        On Error GoTo 0
        ' Print the error message to Excel if it exists
        If errorMessage <> "" Then
            ws1.Cells(4, 2 + 1).Value = errorMessage
            driver.Quit
            Application.StatusBar = "Error : " & errorMessage & "Try: Enter your valid Username and Password for your Agile Time"
            MsgBox "Error : " & errorMessage & "Try: Enter your valid Username and Password for your Agile Time"
        Else
            ws1.Cells(4, 2 + 1).ClearContents
            explicitwait driver, "//div[@class='loader-box-wrapper d-flex bg-white p-20 shadow rounded']"
    
    
    
        ' Click on menu items and switch to frame
        WaitForElementAndClick driver, "//span[text()='Time Sheet']", 5000
        driver.wait 2000
        WaitForElementAndClick driver, "//span[text()='Time Sheet Entry']", 5000
        driver.SwitchToFrame "middle1"
        explicitwait driver, "//div[@class='loader-box-wrapper d-flex bg-white p-20 shadow rounded']"

    
    ' Declare and set the worksheet variable
    Dim ws As Worksheet
    Set ws = ThisWorkbook.Worksheets("Time Sheet Details") ' Change "Sheet1" to your actual sheet name

    ' Get the used range in the Excel sheet (cells with data)
    Dim usedRange As Range
    Set usedRange = ws.usedRange
    
    ' Get the row count and column count of the used range
    Dim rowCount As Long
    Dim colCount As Long
    rowCount = usedRange.rows.count
    colCount = usedRange.Columns.count
    
    ' Loop through rows and columns in the used range
    Dim row As Long
    Dim col As Long
    For row = 2 To rowCount
        ' Read data from the current row
        Dim cellValue1 As Variant
        Dim cellValue2 As Variant
        Dim cellValue3 As Variant
        Dim cellValue4 As Variant
        Dim cellValue5 As Variant
        cellValue1 = ws.Cells(row, 1).Value ' Assuming the first cell value is in column 1
        cellValue2 = ws.Cells(row, 2).Value
        cellValue3 = ws.Cells(row, 3).Value
        cellValue4 = ws.Cells(row, 4).Value
        cellValue5 = ws.Cells(row, 5).Value

        ' Check if the cell values are not empty
        If Not IsEmpty(cellValue1) And Not IsEmpty(cellValue2) Then
            ' Sending Date
            Dim formatteddate As String
            formatteddate = Format(cellValue1, "dd/mm/yyyy")
            driver.FindElementByXPath("//input[@id='dwdate000F1']").SendKeys formatteddate
            
            On Error Resume Next
            ' Sending Select Task Name
            driver.FindElementByXPath("//span[@aria-controls='select2-dwtask000F1-container']").Click
            driver.wait 1000
            driver.FindElementByXPath("//a[@data-refresh='dwtask000F1']").Click
            driver.wait 3000
            driver.FindElementByXPath("//li[text()='" & cellValue2 & "']").Click
            
            ' Sending Activity Type
            driver.FindElementByXPath("//span[@aria-labelledby='select2-activitytype000F1-container']").Click
            driver.wait 1000
            driver.FindElementByXPath("//a[@data-refresh='activitytype000F1']").Click
            driver.wait 3000
            driver.FindElementByXPath("//li[text()='" & cellValue3 & "']").Click
            
            ' Sending Hours Worked
            driver.FindElementByXPath("//input[@id='dwhoursspent000F1']").SendKeys cellValue4
            
''            Sending Partner Name
'            driver.FindElementByXPath("//span[@aria-labelledby='select2-partner000F1-container']").Click
'            driver.FindElementByXPath("//a[@data-refresh='partner000F1']").Click
'            driver.wait 3000
'            driver.FindElementByXPath("//li[text()='" & cellValue5 & "']").Click
            
''            Sending Customer Name
'            driver.FindElementByXPath("//span[@aria-labelledby='select2-customer000F1-container']").Click
'            driver.FindElementByXPath("//a[@data-refresh='customer000F1']").Click
'            driver.wait 3000
'            driver.FindElementByXPath("//li[text()='" & cellValue7 & "']").Click
            
            ' Sending Comments
            driver.FindElementByXPath("//a[@id='cke_18']").Click
            driver.FindElementByXPath("//div[@id='cke_1_contents']/textarea").SendKeys cellValue5
            
            ' submit Timesheet entry
            driver.FindElementByXPath("//a[@id='ftbtn_iSave']").Click
            driver.SwitchToDefaultContent
            
            ' Capture message (optional)
            Dim msg As String
            msg = driver.FindElementByXPath("//div[@class='toast-message']").Text
            Debug.Print msg
            On Error GoTo 0
            WaitForElementAndClick driver, "//span[text()='Time Sheet Entry']", 5000
            
            ' Write the message to the Excel sheet (optional)
            ws.Cells(row, colCount + 1).Value = msg ' Write to the end of the row
            driver.wait 3000
            driver.SwitchToFrame "middle1"
            
        End If
    Next row
    End If
    End If
    End If
    ' Wait and close the browser
    driver.wait 3000
    driver.Close
    Application.StatusBar = "Time Sheet Updated Successfully!!"
    MsgBox "Time Sheet Updated Successfully!!"
    
End Sub




Function WaitForElementAndClick(driver As Object, locator As String, timeout As Integer) As Boolean
    Dim startTime As Double
    startTime = Timer
    
    Do While Timer - startTime < timeout
        On Error Resume Next
        Dim element As Object
        Set element = driver.FindElementByXPath(locator)
        On Error GoTo 0
        
        If Not element Is Nothing Then
            element.Click
            WaitForElementAndClick = True
            Exit Function
        End If
        
        Application.wait Now + TimeValue("0:00:1") ' Wait for 1 second
    Loop
    
    WaitForElementAndClick = False
End Function

Sub explicitwait(driver As Object, locator As String)
    Dim i As Integer
    On Error GoTo Retry
    driver.FindElementByXPath (locator)
    Exit Sub
Retry:
    driver.wait 500
    i = i + 1
    If i = 20 Then
        On Error GoTo 0
        Exit Sub
    Else
        Resume
    End If
End Sub


